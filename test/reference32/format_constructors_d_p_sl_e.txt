Fiber!(Dense(Separation(SparseList(Element(0))))):
initialized fiber: Fiber(Dense{Int32}(Separation([SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}([2]), 3, [1, 2], [1]), SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}([3]), 3, [1, 2], [1])], SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1], Int32[])), 6))
sized fiber: Fiber(Dense{Int32}(Separation([SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[]), SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1, 1], Int32[])], SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 3, [1], Int32[])), 6))
empty fiber: Fiber(Dense{Int32}(Separation([SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 0, [1], Int32[])], SparseList{Int32}(Element{0, Int32, Int32}(Int32[]), 0, [1], Int32[])), 0))

