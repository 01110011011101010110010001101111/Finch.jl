Fiber!(SparseHash{2}(Element(0))) constructors:
initialized fiber: Fiber(SparseHash{2, Tuple{Int32, Int32}}(Element{0.0, Float64, Int32}([1.0, 2.0, 2.0, 7.0, 1.0, 3.0, 3.0, 9.0]), (3, 6), [1, 9], Dict{Tuple{Int32, Tuple{Int32, Int32}}, Int32}((1, (1, 2)) => 2, (1, (1, 3)) => 3, (1, (1, 5)) => 6, (1, (1, 6)) => 7, (1, (2, 1)) => 1, (1, (2, 3)) => 4, (1, (2, 4)) => 5, (1, (3, 6)) => 8), [(1, (2, 1)) => 1, (1, (1, 2)) => 2, (1, (1, 3)) => 3, (1, (2, 3)) => 4, (1, (2, 4)) => 5, (1, (1, 5)) => 6, (1, (1, 6)) => 7, (1, (3, 6)) => 8]))
initialized fiber: Fiber(SparseHash{2, Tuple{Int16, Int16}}(Element{0.0, Float64, Int32}([1.0, 2.0, 2.0, 7.0, 1.0, 3.0, 3.0, 9.0]), (3, 6), [1, 9], Dict{Tuple{Int32, Tuple{Int16, Int16}}, Int32}((1, (1, 2)) => 2, (1, (1, 3)) => 3, (1, (1, 5)) => 6, (1, (1, 6)) => 7, (1, (2, 1)) => 1, (1, (2, 3)) => 4, (1, (2, 4)) => 5, (1, (3, 6)) => 8), Pair{Tuple{Int32, Tuple{Int16, Int16}}, Int32}[(1, (2, 1)) => 1, (1, (1, 2)) => 2, (1, (1, 3)) => 3, (1, (2, 3)) => 4, (1, (2, 4)) => 5, (1, (1, 5)) => 6, (1, (1, 6)) => 7, (1, (3, 6)) => 8]))
sized fiber: Fiber(SparseHash{2, Tuple{Int32, Int32}}(Element{0.0, Float64, Int32}(Float64[]), (3, 7), [1, 1], Dict{Tuple{Int32, Tuple{Int32, Int32}}, Int32}(), Pair{Tuple{Int32, Tuple{Int32, Int32}}, Int32}[]))
sized fiber: Fiber(SparseHash{2, Tuple{Int16, Int16}}(Element{0.0, Float64, Int32}(Float64[]), (3, 7), [1, 1], Dict{Tuple{Int32, Tuple{Int16, Int16}}, Int32}(), Pair{Tuple{Int32, Tuple{Int16, Int16}}, Int32}[]))
empty fiber: Fiber(SparseHash{2, Tuple{Int32, Int32}}(Element{0.0, Float64, Int32}(Float64[]), (0, 0), [1, 1], Dict{Tuple{Int32, Tuple{Int32, Int32}}, Int32}(), Pair{Tuple{Int32, Tuple{Int32, Int32}}, Int32}[]))
empty fiber: Fiber(SparseHash{2, Tuple{Int16, Int16}}(Element{0.0, Float64, Int32}(Float64[]), (0, 0), [1, 1], Dict{Tuple{Int32, Tuple{Int16, Int16}}, Int32}(), Pair{Tuple{Int32, Tuple{Int16, Int16}}, Int32}[]))

