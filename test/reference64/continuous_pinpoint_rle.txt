julia> @finch_code begin
        z2 .= 0
        for i = _
            z2[] += pinpoint_rle[i]
        end
    end
quote
    z2 = (ex.bodies[1]).tns.tns
    pinpoint_rle_lvl = (ex.bodies[2]).body.rhs.tns.tns.lvl
    pinpoint_rle_lvl_2 = pinpoint_rle_lvl.lvl
    z2_val = 0
    pinpoint_rle_lvl_q = pinpoint_rle_lvl.ptr[1]
    pinpoint_rle_lvl_q_stop = pinpoint_rle_lvl.ptr[1 + 1]
    if pinpoint_rle_lvl_q < pinpoint_rle_lvl_q_stop
        pinpoint_rle_lvl_i_end = pinpoint_rle_lvl.right[pinpoint_rle_lvl_q_stop - 1]
    else
        pinpoint_rle_lvl_i_end = 0.0f0
    end
    phase_stop = min(pinpoint_rle_lvl_i_end, pinpoint_rle_lvl.shape)
    if phase_stop >= limit(1.0tiny(0ϵ))
        i = limit(1.0tiny(0ϵ))
        if pinpoint_rle_lvl.right[pinpoint_rle_lvl_q] < limit(1.0tiny(0ϵ))
            pinpoint_rle_lvl_q = Finch.scansearch(pinpoint_rle_lvl.right, limit(1.0tiny(0ϵ)), pinpoint_rle_lvl_q, pinpoint_rle_lvl_q_stop - 1)
        end
        while i <= phase_stop
            pinpoint_rle_lvl_i_start = pinpoint_rle_lvl.left[pinpoint_rle_lvl_q]
            pinpoint_rle_lvl_i_stop = pinpoint_rle_lvl.right[pinpoint_rle_lvl_q]
            phase_start_2 = i
            phase_stop_2 = min(phase_stop, pinpoint_rle_lvl_i_stop)
            if phase_stop_2 >= i
                phase_start_4 = max(phase_start_2, pinpoint_rle_lvl_i_start)
                if phase_stop_2 >= phase_start_4
                    pinpoint_rle_lvl_2_val_2 = pinpoint_rle_lvl_2.val[pinpoint_rle_lvl_q]
                    cond_2 = -phase_start_4 + phase_stop_2 == 0
                    if cond_2
                        z2_val = pinpoint_rle_lvl_2_val_2 + z2_val
                    end
                end
                pinpoint_rle_lvl_q += phase_stop_2 == pinpoint_rle_lvl_i_stop
                i = phase_stop_2 + limit(0tiny(1ϵ))
            end
        end
    end
    (z2 = (Scalar){0, Int64}(z2_val),)
end
julia> @finch begin
        z2 .= 0
        for i = _
            z2[] += pinpoint_rle[i]
        end
    end
(z2 = Scalar{0, Int64}(100),)

