SparseHash{1} representation:

5x_false: Bool[0, 0, 0, 0, 0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{false, Bool, Int64}(Bool[]), (5,), [1, 1], Dict{Tuple{Int64, Tuple{Int64}}, Int64}(), Pair{Tuple{Int64, Tuple{Int64}}, Int64}[]))
countstored: 0
5x_true: Bool[1, 1, 1, 1, 1]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1]), (5,), [1, 6], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (1,)) => 1, (1, (2,)) => 2, (1, (3,)) => 3, (1, (4,)) => 4, (1, (5,)) => 5), [(1, (1,)) => 1, (1, (2,)) => 2, (1, (3,)) => 3, (1, (4,)) => 4, (1, (5,)) => 5]))
countstored: 5
6x_bool_mix: Bool[0, 1, 1, 0, 0, 1]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{false, Bool, Int64}(Bool[1, 1, 1]), (6,), [1, 4], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (2,)) => 1, (1, (3,)) => 2, (1, (6,)) => 3), [(1, (2,)) => 1, (1, (3,)) => 2, (1, (6,)) => 3]))
countstored: 3
6x_one_bool: Bool[0, 0, 1, 0, 0, 0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{false, Bool, Int64}(Bool[1]), (6,), [1, 2], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (3,)) => 1), [(1, (3,)) => 1]))
countstored: 1
1111x_bool_mix: Bool[0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), (1111,), [1, 449], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (2,)) => 1, (1, (3,)) => 2, (1, (555,)) => 3, (1, (556,)) => 4, (1, (557,)) => 5, (1, (558,)) => 6, (1, (559,)) => 7, (1, (560,)) => 8, (1, (561,)) => 9, (1, (562,)) => 10, (1, (563,)) => 11, (1, (564,)) => 12, (1, (565,)) => 13, (1, (566,)) => 14, (1, (567,)) => 15, (1, (568,)) => 16, (1, (569,)) => 17, (1, (570,)) => 18, (1, (571,)) => 19, (1, (572,)) => 20, (1, (573,)) => 21, (1, (574,)) => 22, (1, (575,)) => 23, (1, (576,)) => 24, (1, (577,)) => 25, (1, (578,)) => 26, (1, (579,)) => 27, (1, (580,)) => 28, (1, (581,)) => 29, (1, (582,)) => 30, (1, (583,)) => 31, (1, (584,)) => 32, (1, (585,)) => 33, (1, (586,)) => 34, (1, (587,)) => 35, (1, (588,)) => 36, (1, (589,)) => 37, (1, (590,)) => 38, (1, (591,)) => 39, (1, (592,)) => 40, (1, (593,)) => 41, (1, (594,)) => 42, (1, (595,)) => 43, (1, (596,)) => 44, (1, (597,)) => 45, (1, (598,)) => 46, (1, (599,)) => 47, (1, (600,)) => 48, (1, (601,)) => 49, (1, (602,)) => 50, (1, (603,)) => 51, (1, (604,)) => 52, (1, (605,)) => 53, (1, (606,)) => 54, (1, (607,)) => 55, (1, (608,)) => 56, (1, (609,)) => 57, (1, (610,)) => 58, (1, (611,)) => 59, (1, (612,)) => 60, (1, (613,)) => 61, (1, (614,)) => 62, (1, (615,)) => 63, (1, (616,)) => 64, (1, (617,)) => 65, (1, (618,)) => 66, (1, (619,)) => 67, (1, (620,)) => 68, (1, (621,)) => 69, (1, (622,)) => 70, (1, (623,)) => 71, (1, (624,)) => 72, (1, (625,)) => 73, (1, (626,)) => 74, (1, (627,)) => 75, (1, (628,)) => 76, (1, (629,)) => 77, (1, (630,)) => 78, (1, (631,)) => 79, (1, (632,)) => 80, (1, (633,)) => 81, (1, (634,)) => 82, (1, (635,)) => 83, (1, (636,)) => 84, (1, (637,)) => 85, (1, (638,)) => 86, (1, (639,)) => 87, (1, (640,)) => 88, (1, (641,)) => 89, (1, (642,)) => 90, (1, (643,)) => 91, (1, (644,)) => 92, (1, (645,)) => 93, (1, (646,)) => 94, (1, (647,)) => 95, (1, (648,)) => 96, (1, (649,)) => 97, (1, (650,)) => 98, (1, (651,)) => 99, (1, (652,)) => 100, (1, (653,)) => 101, (1, (654,)) => 102, (1, (655,)) => 103, (1, (656,)) => 104, (1, (657,)) => 105, (1, (658,)) => 106, (1, (659,)) => 107, (1, (660,)) => 108, (1, (661,)) => 109, (1, (662,)) => 110, (1, (663,)) => 111, (1, (664,)) => 112, (1, (665,)) => 113, (1, (666,)) => 114, (1, (667,)) => 115, (1, (668,)) => 116, (1, (669,)) => 117, (1, (670,)) => 118, (1, (671,)) => 119, (1, (672,)) => 120, (1, (673,)) => 121, (1, (674,)) => 122, (1, (675,)) => 123, (1, (676,)) => 124, (1, (677,)) => 125, (1, (678,)) => 126, (1, (679,)) => 127, (1, (680,)) => 128, (1, (681,)) => 129, (1, (682,)) => 130, (1, (683,)) => 131, (1, (684,)) => 132, (1, (685,)) => 133, (1, (686,)) => 134, (1, (687,)) => 135, (1, (688,)) => 136, (1, (689,)) => 137, (1, (690,)) => 138, (1, (691,)) => 139, (1, (692,)) => 140, (1, (693,)) => 141, (1, (694,)) => 142, (1, (695,)) => 143, (1, (696,)) => 144, (1, (697,)) => 145, (1, (698,)) => 146, (1, (699,)) => 147, (1, (700,)) => 148, (1, (701,)) => 149, (1, (702,)) => 150, (1, (703,)) => 151, (1, (704,)) => 152, (1, (705,)) => 153, (1, (706,)) => 154, (1, (707,)) => 155, (1, (708,)) => 156, (1, (709,)) => 157, (1, (710,)) => 158, (1, (711,)) => 159, (1, (712,)) => 160, (1, (713,)) => 161, (1, (714,)) => 162, (1, (715,)) => 163, (1, (716,)) => 164, (1, (717,)) => 165, (1, (718,)) => 166, (1, (719,)) => 167, (1, (720,)) => 168, (1, (721,)) => 169, (1, (722,)) => 170, (1, (723,)) => 171, (1, (724,)) => 172, (1, (725,)) => 173, (1, (726,)) => 174, (1, (727,)) => 175, (1, (728,)) => 176, (1, (729,)) => 177, (1, (730,)) => 178, (1, (731,)) => 179, (1, (732,)) => 180, (1, (733,)) => 181, (1, (734,)) => 182, (1, (735,)) => 183, (1, (736,)) => 184, (1, (737,)) => 185, (1, (738,)) => 186, (1, (739,)) => 187, (1, (740,)) => 188, (1, (741,)) => 189, (1, (742,)) => 190, (1, (743,)) => 191, (1, (744,)) => 192, (1, (745,)) => 193, (1, (746,)) => 194, (1, (747,)) => 195, (1, (748,)) => 196, (1, (749,)) => 197, (1, (750,)) => 198, (1, (751,)) => 199, (1, (752,)) => 200, (1, (753,)) => 201, (1, (754,)) => 202, (1, (755,)) => 203, (1, (756,)) => 204, (1, (757,)) => 205, (1, (758,)) => 206, (1, (759,)) => 207, (1, (760,)) => 208, (1, (761,)) => 209, (1, (762,)) => 210, (1, (763,)) => 211, (1, (764,)) => 212, (1, (765,)) => 213, (1, (766,)) => 214, (1, (767,)) => 215, (1, (768,)) => 216, (1, (769,)) => 217, (1, (770,)) => 218, (1, (771,)) => 219, (1, (772,)) => 220, (1, (773,)) => 221, (1, (774,)) => 222, (1, (775,)) => 223, (1, (776,)) => 224, (1, (777,)) => 225, (1, (778,)) => 226, (1, (779,)) => 227, (1, (780,)) => 228, (1, (781,)) => 229, (1, (782,)) => 230, (1, (783,)) => 231, (1, (784,)) => 232, (1, (785,)) => 233, (1, (786,)) => 234, (1, (787,)) => 235, (1, (788,)) => 236, (1, (789,)) => 237, (1, (790,)) => 238, (1, (791,)) => 239, (1, (792,)) => 240, (1, (793,)) => 241, (1, (794,)) => 242, (1, (795,)) => 243, (1, (796,)) => 244, (1, (797,)) => 245, (1, (798,)) => 246, (1, (799,)) => 247, (1, (800,)) => 248, (1, (801,)) => 249, (1, (802,)) => 250, (1, (803,)) => 251, (1, (804,)) => 252, (1, (805,)) => 253, (1, (806,)) => 254, (1, (807,)) => 255, (1, (808,)) => 256, (1, (809,)) => 257, (1, (810,)) => 258, (1, (811,)) => 259, (1, (812,)) => 260, (1, (813,)) => 261, (1, (814,)) => 262, (1, (815,)) => 263, (1, (816,)) => 264, (1, (817,)) => 265, (1, (818,)) => 266, (1, (819,)) => 267, (1, (820,)) => 268, (1, (821,)) => 269, (1, (822,)) => 270, (1, (823,)) => 271, (1, (824,)) => 272, (1, (825,)) => 273, (1, (826,)) => 274, (1, (827,)) => 275, (1, (828,)) => 276, (1, (829,)) => 277, (1, (830,)) => 278, (1, (831,)) => 279, (1, (832,)) => 280, (1, (833,)) => 281, (1, (834,)) => 282, (1, (835,)) => 283, (1, (836,)) => 284, (1, (837,)) => 285, (1, (838,)) => 286, (1, (839,)) => 287, (1, (840,)) => 288, (1, (841,)) => 289, (1, (842,)) => 290, (1, (843,)) => 291, (1, (844,)) => 292, (1, (845,)) => 293, (1, (846,)) => 294, (1, (847,)) => 295, (1, (848,)) => 296, (1, (849,)) => 297, (1, (850,)) => 298, (1, (851,)) => 299, (1, (852,)) => 300, (1, (853,)) => 301, (1, (854,)) => 302, (1, (855,)) => 303, (1, (856,)) => 304, (1, (857,)) => 305, (1, (858,)) => 306, (1, (859,)) => 307, (1, (860,)) => 308, (1, (861,)) => 309, (1, (862,)) => 310, (1, (863,)) => 311, (1, (864,)) => 312, (1, (865,)) => 313, (1, (866,)) => 314, (1, (867,)) => 315, (1, (868,)) => 316, (1, (869,)) => 317, (1, (870,)) => 318, (1, (871,)) => 319, (1, (872,)) => 320, (1, (873,)) => 321, (1, (874,)) => 322, (1, (875,)) => 323, (1, (876,)) => 324, (1, (877,)) => 325, (1, (878,)) => 326, (1, (879,)) => 327, (1, (880,)) => 328, (1, (881,)) => 329, (1, (882,)) => 330, (1, (883,)) => 331, (1, (884,)) => 332, (1, (885,)) => 333, (1, (886,)) => 334, (1, (887,)) => 335, (1, (888,)) => 336, (1, (889,)) => 337, (1, (890,)) => 338, (1, (891,)) => 339, (1, (892,)) => 340, (1, (893,)) => 341, (1, (894,)) => 342, (1, (895,)) => 343, (1, (896,)) => 344, (1, (897,)) => 345, (1, (898,)) => 346, (1, (899,)) => 347, (1, (900,)) => 348, (1, (901,)) => 349, (1, (902,)) => 350, (1, (903,)) => 351, (1, (904,)) => 352, (1, (905,)) => 353, (1, (906,)) => 354, (1, (907,)) => 355, (1, (908,)) => 356, (1, (909,)) => 357, (1, (910,)) => 358, (1, (911,)) => 359, (1, (912,)) => 360, (1, (913,)) => 361, (1, (914,)) => 362, (1, (915,)) => 363, (1, (916,)) => 364, (1, (917,)) => 365, (1, (918,)) => 366, (1, (919,)) => 367, (1, (920,)) => 368, (1, (921,)) => 369, (1, (922,)) => 370, (1, (923,)) => 371, (1, (924,)) => 372, (1, (925,)) => 373, (1, (926,)) => 374, (1, (927,)) => 375, (1, (928,)) => 376, (1, (929,)) => 377, (1, (930,)) => 378, (1, (931,)) => 379, (1, (932,)) => 380, (1, (933,)) => 381, (1, (934,)) => 382, (1, (935,)) => 383, (1, (936,)) => 384, (1, (937,)) => 385, (1, (938,)) => 386, (1, (939,)) => 387, (1, (940,)) => 388, (1, (941,)) => 389, (1, (942,)) => 390, (1, (943,)) => 391, (1, (944,)) => 392, (1, (945,)) => 393, (1, (946,)) => 394, (1, (947,)) => 395, (1, (948,)) => 396, (1, (949,)) => 397, (1, (950,)) => 398, (1, (951,)) => 399, (1, (952,)) => 400, (1, (953,)) => 401, (1, (954,)) => 402, (1, (955,)) => 403, (1, (956,)) => 404, (1, (957,)) => 405, (1, (958,)) => 406, (1, (959,)) => 407, (1, (960,)) => 408, (1, (961,)) => 409, (1, (962,)) => 410, (1, (963,)) => 411, (1, (964,)) => 412, (1, (965,)) => 413, (1, (966,)) => 414, (1, (967,)) => 415, (1, (968,)) => 416, (1, (969,)) => 417, (1, (970,)) => 418, (1, (971,)) => 419, (1, (972,)) => 420, (1, (973,)) => 421, (1, (974,)) => 422, (1, (975,)) => 423, (1, (976,)) => 424, (1, (977,)) => 425, (1, (978,)) => 426, (1, (979,)) => 427, (1, (980,)) => 428, (1, (981,)) => 429, (1, (982,)) => 430, (1, (983,)) => 431, (1, (984,)) => 432, (1, (985,)) => 433, (1, (986,)) => 434, (1, (987,)) => 435, (1, (988,)) => 436, (1, (989,)) => 437, (1, (990,)) => 438, (1, (991,)) => 439, (1, (992,)) => 440, (1, (993,)) => 441, (1, (994,)) => 442, (1, (995,)) => 443, (1, (996,)) => 444, (1, (997,)) => 445, (1, (998,)) => 446, (1, (999,)) => 447, (1, (1001,)) => 448), [(1, (2,)) => 1, (1, (3,)) => 2, (1, (555,)) => 3, (1, (556,)) => 4, (1, (557,)) => 5, (1, (558,)) => 6, (1, (559,)) => 7, (1, (560,)) => 8, (1, (561,)) => 9, (1, (562,)) => 10, (1, (563,)) => 11, (1, (564,)) => 12, (1, (565,)) => 13, (1, (566,)) => 14, (1, (567,)) => 15, (1, (568,)) => 16, (1, (569,)) => 17, (1, (570,)) => 18, (1, (571,)) => 19, (1, (572,)) => 20, (1, (573,)) => 21, (1, (574,)) => 22, (1, (575,)) => 23, (1, (576,)) => 24, (1, (577,)) => 25, (1, (578,)) => 26, (1, (579,)) => 27, (1, (580,)) => 28, (1, (581,)) => 29, (1, (582,)) => 30, (1, (583,)) => 31, (1, (584,)) => 32, (1, (585,)) => 33, (1, (586,)) => 34, (1, (587,)) => 35, (1, (588,)) => 36, (1, (589,)) => 37, (1, (590,)) => 38, (1, (591,)) => 39, (1, (592,)) => 40, (1, (593,)) => 41, (1, (594,)) => 42, (1, (595,)) => 43, (1, (596,)) => 44, (1, (597,)) => 45, (1, (598,)) => 46, (1, (599,)) => 47, (1, (600,)) => 48, (1, (601,)) => 49, (1, (602,)) => 50, (1, (603,)) => 51, (1, (604,)) => 52, (1, (605,)) => 53, (1, (606,)) => 54, (1, (607,)) => 55, (1, (608,)) => 56, (1, (609,)) => 57, (1, (610,)) => 58, (1, (611,)) => 59, (1, (612,)) => 60, (1, (613,)) => 61, (1, (614,)) => 62, (1, (615,)) => 63, (1, (616,)) => 64, (1, (617,)) => 65, (1, (618,)) => 66, (1, (619,)) => 67, (1, (620,)) => 68, (1, (621,)) => 69, (1, (622,)) => 70, (1, (623,)) => 71, (1, (624,)) => 72, (1, (625,)) => 73, (1, (626,)) => 74, (1, (627,)) => 75, (1, (628,)) => 76, (1, (629,)) => 77, (1, (630,)) => 78, (1, (631,)) => 79, (1, (632,)) => 80, (1, (633,)) => 81, (1, (634,)) => 82, (1, (635,)) => 83, (1, (636,)) => 84, (1, (637,)) => 85, (1, (638,)) => 86, (1, (639,)) => 87, (1, (640,)) => 88, (1, (641,)) => 89, (1, (642,)) => 90, (1, (643,)) => 91, (1, (644,)) => 92, (1, (645,)) => 93, (1, (646,)) => 94, (1, (647,)) => 95, (1, (648,)) => 96, (1, (649,)) => 97, (1, (650,)) => 98, (1, (651,)) => 99, (1, (652,)) => 100, (1, (653,)) => 101, (1, (654,)) => 102, (1, (655,)) => 103, (1, (656,)) => 104, (1, (657,)) => 105, (1, (658,)) => 106, (1, (659,)) => 107, (1, (660,)) => 108, (1, (661,)) => 109, (1, (662,)) => 110, (1, (663,)) => 111, (1, (664,)) => 112, (1, (665,)) => 113, (1, (666,)) => 114, (1, (667,)) => 115, (1, (668,)) => 116, (1, (669,)) => 117, (1, (670,)) => 118, (1, (671,)) => 119, (1, (672,)) => 120, (1, (673,)) => 121, (1, (674,)) => 122, (1, (675,)) => 123, (1, (676,)) => 124, (1, (677,)) => 125, (1, (678,)) => 126, (1, (679,)) => 127, (1, (680,)) => 128, (1, (681,)) => 129, (1, (682,)) => 130, (1, (683,)) => 131, (1, (684,)) => 132, (1, (685,)) => 133, (1, (686,)) => 134, (1, (687,)) => 135, (1, (688,)) => 136, (1, (689,)) => 137, (1, (690,)) => 138, (1, (691,)) => 139, (1, (692,)) => 140, (1, (693,)) => 141, (1, (694,)) => 142, (1, (695,)) => 143, (1, (696,)) => 144, (1, (697,)) => 145, (1, (698,)) => 146, (1, (699,)) => 147, (1, (700,)) => 148, (1, (701,)) => 149, (1, (702,)) => 150, (1, (703,)) => 151, (1, (704,)) => 152, (1, (705,)) => 153, (1, (706,)) => 154, (1, (707,)) => 155, (1, (708,)) => 156, (1, (709,)) => 157, (1, (710,)) => 158, (1, (711,)) => 159, (1, (712,)) => 160, (1, (713,)) => 161, (1, (714,)) => 162, (1, (715,)) => 163, (1, (716,)) => 164, (1, (717,)) => 165, (1, (718,)) => 166, (1, (719,)) => 167, (1, (720,)) => 168, (1, (721,)) => 169, (1, (722,)) => 170, (1, (723,)) => 171, (1, (724,)) => 172, (1, (725,)) => 173, (1, (726,)) => 174, (1, (727,)) => 175, (1, (728,)) => 176, (1, (729,)) => 177, (1, (730,)) => 178, (1, (731,)) => 179, (1, (732,)) => 180, (1, (733,)) => 181, (1, (734,)) => 182, (1, (735,)) => 183, (1, (736,)) => 184, (1, (737,)) => 185, (1, (738,)) => 186, (1, (739,)) => 187, (1, (740,)) => 188, (1, (741,)) => 189, (1, (742,)) => 190, (1, (743,)) => 191, (1, (744,)) => 192, (1, (745,)) => 193, (1, (746,)) => 194, (1, (747,)) => 195, (1, (748,)) => 196, (1, (749,)) => 197, (1, (750,)) => 198, (1, (751,)) => 199, (1, (752,)) => 200, (1, (753,)) => 201, (1, (754,)) => 202, (1, (755,)) => 203, (1, (756,)) => 204, (1, (757,)) => 205, (1, (758,)) => 206, (1, (759,)) => 207, (1, (760,)) => 208, (1, (761,)) => 209, (1, (762,)) => 210, (1, (763,)) => 211, (1, (764,)) => 212, (1, (765,)) => 213, (1, (766,)) => 214, (1, (767,)) => 215, (1, (768,)) => 216, (1, (769,)) => 217, (1, (770,)) => 218, (1, (771,)) => 219, (1, (772,)) => 220, (1, (773,)) => 221, (1, (774,)) => 222, (1, (775,)) => 223, (1, (776,)) => 224, (1, (777,)) => 225, (1, (778,)) => 226, (1, (779,)) => 227, (1, (780,)) => 228, (1, (781,)) => 229, (1, (782,)) => 230, (1, (783,)) => 231, (1, (784,)) => 232, (1, (785,)) => 233, (1, (786,)) => 234, (1, (787,)) => 235, (1, (788,)) => 236, (1, (789,)) => 237, (1, (790,)) => 238, (1, (791,)) => 239, (1, (792,)) => 240, (1, (793,)) => 241, (1, (794,)) => 242, (1, (795,)) => 243, (1, (796,)) => 244, (1, (797,)) => 245, (1, (798,)) => 246, (1, (799,)) => 247, (1, (800,)) => 248, (1, (801,)) => 249, (1, (802,)) => 250, (1, (803,)) => 251, (1, (804,)) => 252, (1, (805,)) => 253, (1, (806,)) => 254, (1, (807,)) => 255, (1, (808,)) => 256, (1, (809,)) => 257, (1, (810,)) => 258, (1, (811,)) => 259, (1, (812,)) => 260, (1, (813,)) => 261, (1, (814,)) => 262, (1, (815,)) => 263, (1, (816,)) => 264, (1, (817,)) => 265, (1, (818,)) => 266, (1, (819,)) => 267, (1, (820,)) => 268, (1, (821,)) => 269, (1, (822,)) => 270, (1, (823,)) => 271, (1, (824,)) => 272, (1, (825,)) => 273, (1, (826,)) => 274, (1, (827,)) => 275, (1, (828,)) => 276, (1, (829,)) => 277, (1, (830,)) => 278, (1, (831,)) => 279, (1, (832,)) => 280, (1, (833,)) => 281, (1, (834,)) => 282, (1, (835,)) => 283, (1, (836,)) => 284, (1, (837,)) => 285, (1, (838,)) => 286, (1, (839,)) => 287, (1, (840,)) => 288, (1, (841,)) => 289, (1, (842,)) => 290, (1, (843,)) => 291, (1, (844,)) => 292, (1, (845,)) => 293, (1, (846,)) => 294, (1, (847,)) => 295, (1, (848,)) => 296, (1, (849,)) => 297, (1, (850,)) => 298, (1, (851,)) => 299, (1, (852,)) => 300, (1, (853,)) => 301, (1, (854,)) => 302, (1, (855,)) => 303, (1, (856,)) => 304, (1, (857,)) => 305, (1, (858,)) => 306, (1, (859,)) => 307, (1, (860,)) => 308, (1, (861,)) => 309, (1, (862,)) => 310, (1, (863,)) => 311, (1, (864,)) => 312, (1, (865,)) => 313, (1, (866,)) => 314, (1, (867,)) => 315, (1, (868,)) => 316, (1, (869,)) => 317, (1, (870,)) => 318, (1, (871,)) => 319, (1, (872,)) => 320, (1, (873,)) => 321, (1, (874,)) => 322, (1, (875,)) => 323, (1, (876,)) => 324, (1, (877,)) => 325, (1, (878,)) => 326, (1, (879,)) => 327, (1, (880,)) => 328, (1, (881,)) => 329, (1, (882,)) => 330, (1, (883,)) => 331, (1, (884,)) => 332, (1, (885,)) => 333, (1, (886,)) => 334, (1, (887,)) => 335, (1, (888,)) => 336, (1, (889,)) => 337, (1, (890,)) => 338, (1, (891,)) => 339, (1, (892,)) => 340, (1, (893,)) => 341, (1, (894,)) => 342, (1, (895,)) => 343, (1, (896,)) => 344, (1, (897,)) => 345, (1, (898,)) => 346, (1, (899,)) => 347, (1, (900,)) => 348, (1, (901,)) => 349, (1, (902,)) => 350, (1, (903,)) => 351, (1, (904,)) => 352, (1, (905,)) => 353, (1, (906,)) => 354, (1, (907,)) => 355, (1, (908,)) => 356, (1, (909,)) => 357, (1, (910,)) => 358, (1, (911,)) => 359, (1, (912,)) => 360, (1, (913,)) => 361, (1, (914,)) => 362, (1, (915,)) => 363, (1, (916,)) => 364, (1, (917,)) => 365, (1, (918,)) => 366, (1, (919,)) => 367, (1, (920,)) => 368, (1, (921,)) => 369, (1, (922,)) => 370, (1, (923,)) => 371, (1, (924,)) => 372, (1, (925,)) => 373, (1, (926,)) => 374, (1, (927,)) => 375, (1, (928,)) => 376, (1, (929,)) => 377, (1, (930,)) => 378, (1, (931,)) => 379, (1, (932,)) => 380, (1, (933,)) => 381, (1, (934,)) => 382, (1, (935,)) => 383, (1, (936,)) => 384, (1, (937,)) => 385, (1, (938,)) => 386, (1, (939,)) => 387, (1, (940,)) => 388, (1, (941,)) => 389, (1, (942,)) => 390, (1, (943,)) => 391, (1, (944,)) => 392, (1, (945,)) => 393, (1, (946,)) => 394, (1, (947,)) => 395, (1, (948,)) => 396, (1, (949,)) => 397, (1, (950,)) => 398, (1, (951,)) => 399, (1, (952,)) => 400, (1, (953,)) => 401, (1, (954,)) => 402, (1, (955,)) => 403, (1, (956,)) => 404, (1, (957,)) => 405, (1, (958,)) => 406, (1, (959,)) => 407, (1, (960,)) => 408, (1, (961,)) => 409, (1, (962,)) => 410, (1, (963,)) => 411, (1, (964,)) => 412, (1, (965,)) => 413, (1, (966,)) => 414, (1, (967,)) => 415, (1, (968,)) => 416, (1, (969,)) => 417, (1, (970,)) => 418, (1, (971,)) => 419, (1, (972,)) => 420, (1, (973,)) => 421, (1, (974,)) => 422, (1, (975,)) => 423, (1, (976,)) => 424, (1, (977,)) => 425, (1, (978,)) => 426, (1, (979,)) => 427, (1, (980,)) => 428, (1, (981,)) => 429, (1, (982,)) => 430, (1, (983,)) => 431, (1, (984,)) => 432, (1, (985,)) => 433, (1, (986,)) => 434, (1, (987,)) => 435, (1, (988,)) => 436, (1, (989,)) => 437, (1, (990,)) => 438, (1, (991,)) => 439, (1, (992,)) => 440, (1, (993,)) => 441, (1, (994,)) => 442, (1, (995,)) => 443, (1, (996,)) => 444, (1, (997,)) => 445, (1, (998,)) => 446, (1, (999,)) => 447, (1, (1001,)) => 448]))
countstored: 448
11x_bool_mix: Bool[0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1, 1, 1, 1]), (11,), [1, 9], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (2,)) => 1, (1, (3,)) => 2, (1, (5,)) => 3, (1, (6,)) => 4, (1, (7,)) => 5, (1, (8,)) => 6, (1, (9,)) => 7, (1, (11,)) => 8), [(1, (2,)) => 1, (1, (3,)) => 2, (1, (5,)) => 3, (1, (6,)) => 4, (1, (7,)) => 5, (1, (8,)) => 6, (1, (9,)) => 7, (1, (11,)) => 8]))
countstored: 8
6x_float_mix: [0.0, 2.0, 2.0, 0.0, 3.0, 3.0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{0.0, Float64, Int64}([2.0, 2.0, 3.0, 3.0]), (6,), [1, 5], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (2,)) => 1, (1, (3,)) => 2, (1, (5,)) => 3, (1, (6,)) => 4), [(1, (2,)) => 1, (1, (3,)) => 2, (1, (5,)) => 3, (1, (6,)) => 4]))
countstored: 4
4x_zeros: [0.0, 0.0, 0.0, 0.0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{0.0, Float64, Int64}(Float64[]), (4,), [1, 1], Dict{Tuple{Int64, Tuple{Int64}}, Int64}(), Pair{Tuple{Int64, Tuple{Int64}}, Int64}[]))
countstored: 0
5x_zeros: [0.0, 0.0, 0.0, 0.0, 0.0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{0.0, Float64, Int64}(Float64[]), (5,), [1, 1], Dict{Tuple{Int64, Tuple{Int64}}, Int64}(), Pair{Tuple{Int64, Tuple{Int64}}, Int64}[]))
countstored: 0
5x_ones: [1.0, 1.0, 1.0, 1.0, 1.0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{0.0, Float64, Int64}([1.0, 1.0, 1.0, 1.0, 1.0]), (5,), [1, 6], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (1,)) => 1, (1, (2,)) => 2, (1, (3,)) => 3, (1, (4,)) => 4, (1, (5,)) => 5), [(1, (1,)) => 1, (1, (2,)) => 2, (1, (3,)) => 3, (1, (4,)) => 4, (1, (5,)) => 5]))
countstored: 5
9x_float_mix: [0.0, 1.0, 1.0, 2.0, 2.0, 0.0, 0.0, 3.0, 0.0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{0.0, Float64, Int64}([1.0, 1.0, 2.0, 2.0, 3.0]), (9,), [1, 6], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (2,)) => 1, (1, (3,)) => 2, (1, (4,)) => 3, (1, (5,)) => 4, (1, (8,)) => 5), [(1, (2,)) => 1, (1, (3,)) => 2, (1, (4,)) => 3, (1, (5,)) => 4, (1, (8,)) => 5]))
countstored: 5
1111x_float_mix: [0.0, 20.0, 30.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5550.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6660.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
tensor: Tensor(SparseHash{1, Tuple{Int64}}(Element{0.0, Float64, Int64}([20.0, 30.0, 5550.0, 6660.0]), (1111,), [1, 5], Dict{Tuple{Int64, Tuple{Int64}}, Int64}((1, (2,)) => 1, (1, (3,)) => 2, (1, (555,)) => 3, (1, (666,)) => 4), [(1, (2,)) => 1, (1, (3,)) => 2, (1, (555,)) => 3, (1, (666,)) => 4]))
countstored: 4

